defaults: &defaults
  working_directory: ~/project
  
attach: &attach
  at: ~/project

deploy_branches: &deploy_branches
  branches:
    only:
      - master

version: 2.1
jobs:
  test:
    <<: *defaults
    docker:
      - image: circleci/node:10.18.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Unit Tests
          command: node_modules/.bin/jest --ci --runInBand --coverage
      - run:
          name: Code coverage
          command: ./node_modules/.bin/codecov --token=$CODECOV_KEY
  build:
    <<: *defaults
    docker:
      - image: circleci/node:10.18.1
    steps:
      - checkout
      - attach_workspace:
          <<: *attach
      - run:
          name: Build
          command: npm run build
      - run:
          name: Generate package.json
          command: |
            node -e "console.log(JSON.stringify({ dependencies: require('./package.json').dependencies }))" > dist/package.json
      - persist_to_workspace:
          root: .
          paths: 
            - dist
  deploy:
    <<: *defaults
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - attach_workspace:
          <<: *attach
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GCLOUD_SERVICE_KEY} | base64 --decode --ignore-garbage > ~/gcloud-key.json
      - run:
          name: Google Cloud auth
          command: |
            gcloud auth activate-service-account --key-file ~/gcloud-key.json
            gcloud --quiet config set project ${GCLOUD_PROJECT}
      - run:
          name: Deploy Cloud Function
          command: |
            cd dist
            gcloud beta functions deploy e-results-parser --entry-point handler --trigger-http --verbosity=info

workflows:
  version: 2.1
  deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            <<: *deploy_branches
      - deploy:
          requires:
            - build
          filters:
            <<: *deploy_branches
